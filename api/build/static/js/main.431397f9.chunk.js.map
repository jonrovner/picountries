{"version":3,"sources":["actions.js","components/CountryList.jsx","components/Create.jsx","components/CountryCard.jsx","components/Results.jsx","components/Filters.jsx","components/Search.jsx","components/Home.jsx","components/NavBar.jsx","components/Activity.jsx","components/CountryDetail.jsx","App.js","reportWebVitals.js","reducers.js","store.js","index.js"],"names":["getCountries","dispatch","axios","get","then","res","type","payload","data","catch","err","console","log","getActivities","activities","map","c","filter","a","length","flat","addActivity","activity","post","Countrylist","countries","continent","handleCheckbox","className","htmlFor","name","id","onChange","e","Create","useDispatch","useEffect","getActivitiesEffect","navigate","useNavigate","useSelector","state","countriesfromDB","names","Set","countriesByContinent","forEach","country","hasOwnProperty","push","useState","input","setInput","valid","setValid","viewList","setViewList","handleSubmit","preventDefault","validity","difficulty","season","duration","test","includes","target","checked","value","handleInput","onSubmit","onClick","showList","Europe","Asia","Africa","Oceania","Antarctica","hideList","CountryCard","props","src","flag","alt","Results","filterCountries","showing","setShowing","current","setCurrent","pages","setPages","paginate","slice","filters","pagesEffect","num","Math","ceil","i","to","code","page","Filters","action","handleFilters","document","querySelector","reset","Search","Home","Navbar","Activity","Countrydetail","idPais","useParams","countryDetail","region","capital","Number","area","toLocaleString","population","rel","href","defaults","baseURL","App","getAll","path","element","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","order","rootReducer","continentfilter","arr","activityfilter","countriesIds","returnArr","CountryActivity","countryId","find","undefined","orderBy","ascending","sort","b","localeCompare","reverse","countriesToBeReturned","filtersToReturn","filtered","toLowerCase","composed","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.431397f9.chunk.js","sourcesContent":["import axios from \"axios\"\n\n//let base = 'http://localhost:3001/api'\n\nexport const getCountries = () => {   \n    return function (dispatch) {\n        //console.log(\"geting all countries\")\n        return axios.get('/countries')\n        .then( res => {\n            dispatch({\n                type: 'getCountries',\n                payload: res.data\n            }\n            \n            )})\n            .catch(err => console.log('EROR GETTING ALL COUNTRIES', err))\n        }\n    }\n    \n    export const getActivities = () => {\n        //console.log('getting activities')\n        return function(dispatch){\n        return axios.get('/countries')\n        .then( res => {            \n            let activitiesDB = res.data.map( c => c.activities)\n            let activities = activitiesDB.filter(a => a.length>0).flat()\n           // console.log('activities in db ', activities)\n            dispatch({\n                type: 'getActivities',\n                payload: activities\n            })\n\n        })\n\n    }\n}    \n\nexport const addActivity = (activity) => {    \n    return function(dispatch){\n        return axios.post('/activity', activity)\n        .then( res => {\n            dispatch({\n                type: 'addActivity',\n                payload: activity\n                \n            })\n        })\n        .catch(err => console.log('ERROR ADDING ACTIVITY ,', err))\n        \n    }\n}\n\n\nexport const addFilter = (filter) => {\n    \n    return {\n        type: 'addFilter',\n        payload: filter\n    }\n}\n\nexport const filterByName = (name) => {\n    return {\n        type: 'filterByName',\n        payload: name\n    }\n}\n\nexport const getCountryByCode = (code) => {\n    return function(dispatch){\n        return axios.get(`/countries/${code}` )\n        .then( res => {\n            \n            dispatch({\n                type: 'getCountryByCode',\n                payload: res.data\n            })\n                        \n        })\n    }     \n}\n\nexport const clearFilters = () => {\n    return {\n        type: 'clearFilters'\n    }\n}\n\nexport const clearDetails = () => {\n    return {\n        type: 'clearDetails'\n    }\n}\n\n\n","import React from 'react';\n\nconst Countrylist = ({countries, continent, handleCheckbox}) => {\n    return (\n        <div className='countryGroup' >\n            <h3>{continent}</h3>\n            <div className='countryList'>\n\n            {\n                countries.map( c => (\n                    <div className='countryCheckbox' key={c.name}>\n                        <label className=\"countryName\" htmlFor={c.name}>\n                        <input id={c.name} type=\"checkbox\" onChange={(e)=>handleCheckbox(e)} name={c.name}></input>\n                            \n                        {c.name}</label>\n                    </div>\n                ))\n\n            }\n\n            </div>\n            \n        </div>\n    );\n}\n\nexport default Countrylist;\n","import React, {useState, useEffect} from 'react';\nimport { addActivity, getActivities, getCountries } from '../actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport Countrylist from './CountryList';\n\n\nconst Create = () => {\n\n    const dispatch = useDispatch()\n    useEffect(() => {\n        const getActivitiesEffect = async () => {\n            await dispatch(getActivities())\n    \n        }\n        getActivitiesEffect()\n        return () => {\n            getActivitiesEffect()\n        };\n    }, [dispatch]);\n\n    let navigate = useNavigate()\n    const countries = useSelector(state => state.countriesfromDB)\n    const activities = useSelector(state => state.activities)\n    const names = [...new Set(activities.map(a => a.name))]\n    \n    //console.log('activities in create component', names)\n    \n    let countriesByContinent = {}\n    countries.forEach( country => {\n\n        if (countriesByContinent.hasOwnProperty(country.continent)){\n            countriesByContinent[country.continent].push(country)\n        } else {\n\n            countriesByContinent[country.continent] = [country]\n        }\n    })\n\n    const [input, setInput] = useState({countries: []})\n    const [valid, setValid] = useState(\"\")\n    const [viewList, setViewList] = useState(false)\n\n    const handleInput = (e) => {\n        \n        const {name, value} = e.target\n\n        if (value === \"\") return\n\n        setInput( input => {\n            return {\n                ...input,\n                [name]: value} \n        })\n        \n    }\n\n    const validate = () => {\n        if(!input.name || !input.difficulty || !input.season || !input.duration){\n            return \"all fields must be setted\"\n        }\n        if (/[`!@#$%^&*()_+\\-=\\\\{};':\"\\\\|,.<>?~]/.test(input.name)){\n            return \"no special characters\"\n        }\n        if (names.includes(input.name)){\n            return \"activity already exists\"\n        }\n        return \"valid\"\n    }\n\n    const handleSubmit = async (e) => {        \n        e.preventDefault()\n        const validity = validate()\n        \n        if (validity !== \"valid\"){\n           return setValid(validity)\n        } else {\n            await dispatch(addActivity(input))\n            await dispatch(getCountries())\n            return navigate('/countries')\n        }\n    }\n\n    const handleCheckbox = (e) => {\n        e.target.checked ? setInput({\n            ...input,\n            countries: [...input.countries, e.target.name]\n        }):\n            setInput({\n                ...input,\n                countries: input.countries.filter( c => c !== e.target.name)\n            })\n    }\n    \n    const showList = (e) => {\n        e.preventDefault()\n        setViewList(true)\n    }\n    const hideList = (e) => {\n        e.preventDefault()\n        setViewList(false)\n    }\n\n    //console.log('input is : ', input)\n\n    return (\n        <div className='create'>\n            <form className='createControls'\n                onChange={ (e) => handleInput(e) }\n                onSubmit={(e)=>handleSubmit(e)}> \n                <div className='validation'>{valid}</div>\n                <div className='nameInput'>\n                    <label htmlFor='name'>Name</label>\n                    <input name=\"name\" type=\"text\" />\n                </div>            \n                <div className='difficultyFilter'>\n                    <label htmlFor='difficulty'>Difficulty</label>\n                    <select name=\"difficulty\" id=\"\">\n                        <option value=\"\"></option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n\n                    </select>\n\n                </div>\n              \n                <div className='durationInput'>\n\n                    <label htmlFor='duration'>Duration</label>\n                    <input name=\"duration\" type=\"text\" />\n\n                </div>\n           \n                <div className='seasonInput'>\n\n                    <label htmlFor='season'>Season</label>\n                    <select name=\"season\" id=\"\">\n                        <option value=\"\" ></option>\n                        <option value=\"winter\" >Winter</option>\n                        <option value=\"spring\">Spring</option>\n                        <option value=\"summer\">Summer</option>\n                        <option value=\"fall\">Fall</option>\n                    </select>\n                </div>\n     \n                <div className='createButtons'>\n                    <button className=\"myButton\" onClick={(e)=>showList(e)}>select countries</button>\n                    <button className=\"myButton\" type='submit'>submit</button>\n                </div>\n\n            </form>\n            <form>\n                {\n                 viewList && \n                 <>\n                    <Countrylist continent=\"Europe\" countries={countriesByContinent.Europe} handleCheckbox={handleCheckbox}/>\n                    <Countrylist continent=\"Asia\" countries={countriesByContinent.Asia} handleCheckbox={handleCheckbox}/>\n                    <Countrylist continent=\"North America\" countries={countriesByContinent['North America']} handleCheckbox={handleCheckbox}/>\n                    <Countrylist continent=\"South America\" countries={countriesByContinent['South America']} handleCheckbox={handleCheckbox}/>\n                    <Countrylist continent=\"Africa\" countries={countriesByContinent.Africa} handleCheckbox={handleCheckbox}/>\n                    <Countrylist continent=\"Oceania\" countries={countriesByContinent.Oceania} handleCheckbox={handleCheckbox}/>\n                    <Countrylist continent=\"Antarctica\" countries={countriesByContinent.Antarctica} handleCheckbox={handleCheckbox}/>\n                    <button className=\"myButton\" onClick={(e)=>hideList(e)}>Done</button>\n                 </>                   \n\n                }\n\n                \n            </form>\n            \n        </div>\n    );\n}\n\nexport default Create;\n","import React from 'react';\n\nconst CountryCard = (props) => {\n    \n       \n    return (\n        <div className='countryCard'>\n            <img src={props.flag} alt={props.name+\" flag\"} />\n            <h3>{props.name}</h3>\n            <h6>{props.continent}</h6>\n        </div>\n    );\n}\n\nexport default CountryCard;\n","import React, {useEffect, useState, } from 'react';\nimport CountryCard from './CountryCard';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst Results = () => {\n    \n    const countries = useSelector(state => state.filterCountries) \n    //console.log('countries in component', countries)\n    const [showing, setShowing] = useState([])\n    const [current, setCurrent] = useState(0)\n    const [pages, setPages] = useState([]) \n    \n    useEffect(() => {\n      //  console.log('running pagination effect')\n        setPages([])\n        paginate(countries) \n        setShowing(countries.slice(0,9))        \n              \n    },[countries])\n\n    \n    useEffect(() => {\n        if (pages.length > 0){\n            setShowing(countries.slice(pages[current][0], pages[current][1]))        \n        }\n\n    }, [pages, current, countries])\n    \n    const filters = useSelector(state => state.filters)\n    useEffect(() => {\n        setCurrent(0)\n\n    }, [filters])\n\n    const paginate = (countries) => {\n        let pagesEffect = []\n        let num = countries && countries.length > 0 && \n        Math.ceil((countries.length - 9)/10)\n        for (let i=0; i <=num; i++){\n            if (i===0) \n            pagesEffect[i] = [0, 9]\n            else\n            pagesEffect[i] = [ (i*10)-1, (i*10)+9 ] \n        }\n        if (num > 0){\n            setPages(pagesEffect)\n        }  \n        //console.log('pages in paginate', pages)   \n    } \n\n    const handlePagesIndex = (index) => {\n        setCurrent(index)\n    }\n  \n    const nextPage = () => {\n        if (current === pages.length-1) return\n         else \n            setCurrent(current => current+1)        \n    }\n\n    const prevPage = () => {\n        if (current === 0) return\n        else \n           setCurrent(current => current-1)\n    }\n\n    //console.log('pages in component', pages) \n    return (\n        <>\n        <div className='results'>\n            {\n            (countries.length > 0 && showing && showing.length > 0) \n            ? showing.map( country => { \n                return (\n                <Link \n                key={country.id} \n                to={`/countries/${country.code}`}\n                className=\"resultsItem\"\n                >                \n                    <CountryCard\n                    name={country.name} \n                    flag={country.flag}\n                    code={country.code}\n                    continent={country.continent}    \n                    />\n                </Link>) }        \n            ):(\n                <div className='emptyList'>\n                    <h3>no countries to show</h3>\n                </div>\n            )\n            }\n        </div>\n        <br/>\n        <div className=\"controls\">\n            <div className='pagination' onClick={prevPage}>≪</div>   \n               {                                  \n                pages.length > 0 && pages.map( (page, i) => {\n                    return(\n                        <div className='pagination' \n                            key={i} \n                            onClick={()=>handlePagesIndex(i)}\n                            >\n                            {i+1}\n                        </div>\n                    )\n                })           \n                }\n\n            <div className='pagination' onClick={()=>{nextPage()}}>≫</div>    \n        </div>\n            \n        </>\n    );\n}\n\nexport default Results;\n\n","import React, { useState } from 'react';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { addFilter, filterByName, getCountries, clearFilters } from '../actions';\n\n\nconst Filters = () => {\n\n    const dispatch = useDispatch()    \n    //useEffect(()=>{dispatch(getCountries())},[dispatch])\n    \n    const activities = useSelector(state => state.activities)\n    let names = []\n    if (activities && activities.length > 0) {\n        names = [...new Set(activities.map(a => a.name))]\n    }             \n    \n    const [input, setInput] = useState(\"\")\n    \n    const handleInput = (e) => {\n        e.preventDefault()\n        setInput(e.target.value)\n    }\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setInput(e.target.value)\n        dispatch(filterByName(input))\n        \n    }   \n\n    const handleFilters = (e) => {\n        const {name, value} = e.target\n        dispatch(addFilter({name, value}))\n    }\n\n   \n    \n    return (\n        <div className=\"filters\">\n         \n            <form className='searchForm' action=\"\" onSubmit={(e) => handleSubmit(e)}>\n                        <input className='myInput' type=\"text\" onChange={(e) => handleInput(e)} />\n                        \n                            <button className='myButton' type=\"submit\">search by name</button>\n            </form>    \n            <br />\n\n            <form id=\"filterForm\" onChange={(e)=>handleFilters(e)}>\n\n                <select className='myButton' name=\"continent\" id=\"continent\">\n\n                                <option value=\"clear\">Continent</option>\n                                <option value=\"Asia\">Asia</option>\n                                <option value=\"Africa\">Africa</option>\n                                <option value=\"Europe\">Europe</option>\n                                <option value=\"North America\">North America</option>\n                                <option value=\"South America\">South America</option>\n                                <option value=\"Oceania\">Oceania</option>\n                                <option value=\"Antarctica\">Antarctica</option>   \n                </select>\n                    \n                    \n                <select className='myButton' name=\"activity\" id=\"activity\">\n                        <option value=\"clear\">activity</option>\n                        {\n                            names.length > 0 && names.map( activity => {\n                                return (\n                                    <option key={activity} value={activity}>{activity}</option>\n                                    )\n                                })     \n                                \n                            }\n                </select>\n                \n                <select className='myButton' name=\"order\" id=\"order\">\n                            <option value=\"clear\">order by</option>\n                            <option value=\"az\">A-Z</option>\n                            <option value=\"za\">Z-A</option>\n                            <option value=\"populationASC\">population ascending </option>\n                            <option value=\"populationDESC\">population descending </option>\n                </select>\n            \n            \n            \n            \n            \n            </form>    \n            <button className='myButton' onClick={()=>{\n                dispatch(clearFilters())\n                dispatch(getCountries())\n                document.querySelector('#filterForm').reset()\n            }}>clear filters</button>    \n                \n\n               \n\n                    \n        </div>\n    );\n}\n\nexport default Filters;\n","import React, {useEffect} from 'react';\nimport { useDispatch } from 'react-redux';\nimport {  getActivities } from '../actions';\nimport Results from './Results';\nimport Filters from './Filters';\n\nconst Search = () => {\n        \n    const dispatch = useDispatch()\n    \n    useEffect(() => {\n        dispatch(getActivities())\n    \n    });\n        \n    return (\n        <div className='search'>           \n\n            <Filters />  \n            <Results />                       \n                        \n        </div>\n    );\n}\n\nexport default Search;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n\n    return (\n        <div className='home'>\n            <div className='homeTitle'>\n\n            \n            <h1>COUNTRIES</h1>\n            <h3>with activities</h3>\n            \n            <Link className='homeButton' to='/countries' >\n              <h2 >lets go!</h2>   \n            </Link>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { clearFilters, getActivities, getCountries } from '../actions';\n\nconst Navbar = () => {\n    const dispatch = useDispatch()\n    return (\n        <div className='navBar'>\n            <Link to='/countries'>            \n                <button className='myButton' onClick={()=>{\n                    dispatch(getCountries())\n                    dispatch(clearFilters())\n                    dispatch(getActivities())}}>Browse</button>            \n            </Link>\n            <Link to='/create'>            \n                <button className='myButton'>New Activity</button>            \n            </Link>            \n        </div>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\n\nconst Activity = ({activity}) => {\n    return (\n        <div className='activityCard'>\n            <h3>{activity.name}</h3>\n            <p>Season: {activity.season}</p>\n            <p>Duration: {activity.duration}</p>\n            <p>Difficulty: {activity.difficulty}</p>\n            \n        </div>\n    );\n}\n\nexport default Activity;\n","import React, {useEffect}  from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getCountryByCode, clearDetails } from '../actions';\nimport { useParams } from 'react-router';\nimport Activity from './Activity';\n\nconst Countrydetail = () => {\n\n    const dispatch = useDispatch()\n    const {idPais} = useParams()\n    \n    useEffect(() => {\n       dispatch(getCountryByCode(idPais))\n       return () => {\n           dispatch(clearDetails())\n       }\n    }, [dispatch, idPais])\n\n    const country = useSelector(state => state.countryDetail)\n    \n   console.log(\"country detail: \", country)\n\n    return (\n        \n        <div className='countryDetails'>\n            <h1>\n            {country && country.name}\n            </h1>\n            <h3>{country.region}</h3>\n            <div className='detailBody'>\n                <div className='info'>\n                \n                    <p>Capital: <span>{country.capital}</span></p>\n                    <p>Area: <span>{Number(country.area).toLocaleString()+\" mll. km2\"}</span></p>\n                    <p>Population: <span>{Number(country.population).toLocaleString()}</span></p>\n                    <p>Continent: <span>{country.continent}</span></p>\n                    <p>Code: <span>{country.code}</span></p>\n                    <a className='mapLink' \n                        target='_blank' \n                        rel='noopener noreferrer' \n                        href={country.map}>Open Street Map</a>\n\n                </div>\n                <img src={country.flag} alt={country.name} />\n            </div>\n\n            <div className=\"activities\">\n                {\n                    country.activities &&\n                    country.activities.length > 0 && \n                    country.activities\n                    .map( a => <Activity key={a.name} activity={a} /> )\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Countrydetail;\n","import './App.css';\nimport React, {useEffect} from 'react';\nimport { useDispatch } from 'react-redux';\nimport {Routes, Route } from 'react-router-dom'\nimport Create from './components/Create';\nimport Search from './components/Search';\nimport Home from './components/Home';\nimport Navbar from './components/NavBar';\nimport Countrydetail from './components/CountryDetail';\nimport { getCountries } from './actions';\nimport axios from 'axios';\naxios.defaults.baseURL = '/api'\n//|| 'http://localhost:3001'\n\n\nfunction App() {\n  \n  const dispatch = useDispatch()\n  \n  useEffect( () => {\n    const getAll = async () => {\n        await dispatch(getCountries())        \n    }\n    \n\n    getAll()\n\n},[dispatch])  \n  \n  \n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Routes> \n          <Route path='/' element={<Home/>} />\n          <Route path='/countries' element={<Search />} />\n          <Route\n            exact\n            path='/countries/:idPais'\n            element={ <Countrydetail />}\n          />\n\n          <Route path='/create' element={<Create />} /> \n \n        </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nconst initialState = {\n    countriesfromDB: [],\n    filterCountries: [],\n    countryDetail: {},\n    activities: [],\n    filters: {continent: null, activity: null, order:null},\n    pages: []\n}\n\n\nconst rootReducer = (state = initialState, action ) => {\n\n    if (action.type === 'clearDetails'){\n        return {\n            ...state,\n            countryDetail: {},\n        }\n    }\n\n\n    if (action.type === 'clearFilters'){\n        return {\n            ...state,\n            filters:{continent: null, activity: null, order: null}\n        }\n    }\n    \n    if (action.type === 'addFilter'){\n\n        const continentfilter = (arr, value) => {\n            return arr.filter( c => c.continent === value)    \n        }\n        \n        const activityfilter = (arr, value) => {\n           // console.log('activities in filter', state.activities, \"value\", value)\n            let countriesIds = [], returnArr = []        \n            \n            state.activities.forEach( activity => {\n                if (activity.name === value){                \n                    countriesIds.push(activity.CountryActivity.countryId)\n                }\n            })\n            //console.log('countries ids are ', countriesIds)\n\n            countriesIds.forEach( id => {\n                returnArr.push(arr.find( c => c.id === id))\n            }) \n            \n            return returnArr.filter(e => e !== undefined)\n        }\n        \n        const orderBy = (arr, value) => {\n            \n            let ascending = arr.sort((a,b)=>{\n                return a.name.localeCompare(b.name)\n            })\n    \n        if (value === 'az'){\n            return ascending\n        }\n            \n    \n        if (value === 'za'){\n            let descending = ascending.reverse()\n                return descending\n        }\n            \n    \n        if (value === 'populationASC') {\n                return arr.sort((a,b) => {\n                        if (a.population > b.population) \n                            return 1\n                        if (b.population > a.population)\n                            return -1\n                        else\n                            return 0\n    \n                    })\n            }\n            \n        if (value === 'populationDESC') {\n                return arr.sort((a,b) => {\n                        if (a.population > b.population) \n                            return -1\n                        if (b.population > a.population)\n                            return 1\n                        else\n                            return 0\n    \n                    })\n        }\n        }\n        \n        let countriesToBeReturned = [], filtersToReturn = {continent:null, activity:null, order:null}\n        \n        const {name, value} = action.payload \n        //console.log('adding filter ', name, 'with value', value)\n        \n        if (name === 'continent'){           \n           // console.log('entering continent')\n            \n            if (state.filters.activity){     \n                if (state.filters.continent){\n                   // console.log('continent and activity already set')\n                    const filtered = activityfilter(state.countriesfromDB, state.filters.activity)\n                    countriesToBeReturned = continentfilter(filtered, value)\n                }  else{\n                  //console.log('only activity set as', state.filters.activity)                    \n                    let filtered = activityfilter(state.countriesfromDB, state.filters.activity)\n                 //   console.log('filtered is ', filtered)\n                    countriesToBeReturned = continentfilter(filtered, value)\n                }             \n                \n            } else {                \n                    countriesToBeReturned = continentfilter(state.countriesfromDB, value)                \n            }\n            \n            if(state.filters.order){\n                //console.log('ordering by', state.filters.order)\n                countriesToBeReturned = orderBy(countriesToBeReturned, state.filters.order )\n            }\n            \n            //console.log('returning from continent :', countriesToBeReturned)\n            filtersToReturn = \n            {...state.filters,\n                continent: value\n            }\n        }\n\n        if (name === 'activity'){          \n            //console.log('entering activity', 'value', value)                    \n           \n            if (state.filters.continent){\n\n                if (state.filters.activity){\n              //      console.log('activity and continent are SET')\n\n                    let filtered = continentfilter(state.countriesfromDB, state.filters.continent)\n                    countriesToBeReturned = activityfilter(filtered, value)\n                } else {\n                //    console.log('only continent is set')\n                    countriesToBeReturned = activityfilter(state.filterCountries, value)\n                }\n\n            } else {\n                \n                    countriesToBeReturned = activityfilter(state.countriesfromDB, value)\n\n                }            \n\n            //console.log('returning from activity', countriesToBeReturned)\n            filtersToReturn = {\n                ...state.filters,\n                activity: value\n            } \n    \n            }                          \n                          \n\n        if (name === \"order\") {\n            \n           //console.log('ordering by', value, \"countries are\", state.filterCountries)\n            \n           countriesToBeReturned = orderBy(state.filterCountries, value)\n           //console.log('returning from reducer', countriesToBeReturned)\n                filtersToReturn = {\n                    ...state.filters,\n                    order: value\n                }\n        }\n        \n       // console.log('filters to return', filtersToReturn)\n       // console.log('countries to return', countriesToBeReturned)    \n            \n        return {\n            ...state,\n            filterCountries: [...countriesToBeReturned],\n            filters: filtersToReturn\n                       \n        }\n\n    } \n\n    \n    if (action.type === 'getCountries'){ \n       \n        return {\n            ...state, \n            countriesfromDB: [...action.payload],\n            filterCountries: [...action.payload],\n          \n        }\n    }\n\n    if (action.type === 'getActivities'){\n       // console.log('gettin activities reducer')                \n        return {\n            ...state,\n            activities: action.payload\n        }\n    }\n\n    \n    if (action.type === 'addActivity'){\n              \n        return {...state,\n                //activities: [...state.activities, action.payload]\n                }\n    }\n\n    if (action.type === 'filterByName'){\n\n        return {\n            ...state,\n            filterCountries: state.countriesfromDB.filter( c => c.name.toLowerCase().includes(action.payload.toLowerCase())),\n            \n        }\n    }\n\n    if (action.type === 'getCountryByCode'){\n        \n        return {\n            ...state,\n            countryDetail: action.payload.country\n        }\n    }\n   \n    \n    \n    else \n   \n        return state\n\n}\n\n\n\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from \"redux-thunk\";\n\nconst composed = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer, \n  composed(applyMiddleware(thunk))\n);\n\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport  store  from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n\n    <BrowserRouter>\n      \n      <App />\n    \n    </BrowserRouter>\n\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}